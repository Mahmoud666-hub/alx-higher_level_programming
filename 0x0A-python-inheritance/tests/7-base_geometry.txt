"""7-base_geometry"""
-----------------------------
usage:

import module:
>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry
>>> bg = BaseGeometry()

test normal:
>>> bg.integer_validator("width", 89)

test Negative:
>>> bg.integer_validator("distance", -4)
Traceback (most recent call last):
...
ValueError: distance must be greater than 0

test zero:
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

test none:
>>> bg.integer_validator("jkl", None)
Traceback (most recent call last):
...
TypeError: jkl must be an integer

test set:
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

test boolean:
>>> bg.integer_validator("age", True)
Traceback (most recent call last):
...
TypeError: age must be an integer

test list:
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

test tuple:
>>> bg.integer_validator("age", (4,))
Traceback (most recent call last):
...
TypeError: age must be an integer

test str:
>>> bg.integer_validator("age", "4")
Traceback (most recent call last):
...
TypeError: age must be an integer

test missing:
>>> bg.integer_validator("age")
Traceback (most recent call last):
...
TypeError: integer_validator() missing 1 required positional argument: 'value'

test missing:
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

test area:
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented
